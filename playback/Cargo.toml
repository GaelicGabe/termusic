[package]
name = "termusic-playback"
description = "playback library to support termusic." 
version.workspace = true 
authors.workspace = true 
edition.workspace = true
license.workspace = true 
repository.workspace = true 
homepage.workspace = true 
keywords.workspace = true 
categories.workspace = true 


[lib]
name = "termusicplayback"
path = "src/lib.rs"
doctest = false


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
termusic-lib= {path = "../lib/"}
anyhow.workspace = true 
base64.workspace = true
clap.workspace = true 
thiserror.workspace = true 
dirs.workspace = true 
discord-rich-presence.workspace = true # = { version="0.2",optional = true}
figment.workspace = true # = { version="0.10", features = ["toml"]}
glib = { version="0.17", optional = true }
gstreamer = { version="0.20", optional = true}
hex.workspace = true # = "0.4"
id3.workspace = true # = "1"
image.workspace = true # = "0.24"
include_dir.workspace = true # = "0.7"
lazy_static.workspace = true # = "1.4"
# lexopt = "0.2"
libaes.workspace = true # = "0.6"
libmpv-sys  = { version = "3", optional = true }
# libmpv = { version = "2",  optional = true}
log.workspace = true # = "0.4"
lovely_env_logger.workspace = true # = "0.6"
lofty.workspace = true #  = "0.12"
md5.workspace = true #  = "0.7"
num-bigint.workspace = true #  = "0.4"
pathdiff.workspace = true #  = { version = "0.2", features = ["camino"] }
pinyin.workspace = true #  = "0.9"
quick-xml.workspace = true #  = "0.28"
rand.workspace = true #  = "0.8"
regex.workspace = true #  = "^1.5.5"
rusqlite.workspace = true #  = { version = "0.29", features = ["bundled"]}
serde.workspace = true #  = { version = "1.0", features = ["derive"] }
serde_json.workspace = true #  = "1.0"
shellexpand.workspace = true #  = "3"
# souvlaki  = { version = "0.6", optional = true }
symphonia.workspace = true #  = { version = "0.5.1",  features = ["aac","mp3","isomp4","alac"]}
# tempfile = { version = "3", optional = true}
toml.workspace = true #  = "0.7"
# tuirealm = { path = "../tui-realm", features = ["serialize"] }
# tui-realm-stdlib = {path = "../tui-realm-stdlib"}
# tui-realm-treeview = { path = "../tui-realm-treeview"}
# tuirealm.workspace = true #   = { version = "1", features = ["serialize"] }
# tui-realm-stdlib.workspace = true #   = "1"
# tui-realm-treeview.workspace = true #   = "1"
unicode-width.workspace = true #   = "^0.1.8"
ureq.workspace = true #   = "2"
urlencoding.workspace = true #   = "2"
# viuer = { version = "0.6", features = ["sixel"] }
viuer.workspace = true #   = "0.6"
yaml-rust.workspace = true #   = "^0.4.5"
ytd-rs.workspace = true #   = { version = "0.1", features = ["yt-dlp"]}
walkdir.workspace = true #   = "2"
wildmatch.workspace = true #   = "2"
opml.workspace = true #   = "1"
chrono.workspace = true #   = "^0.4.23"
rss.workspace = true #   = "2"
rfc822_sanitizer.workspace = true #   = "0.3" 
ahash.workspace = true #   = "^0.8"
semver.workspace = true #   = "^1"
escaper.workspace = true #   = "0.1.1"
textwrap.workspace = true #   = "0.16"
bytes.workspace = true #   = "1"
unicode-segmentation.workspace = true #   = "1.10"
sanitize-filename.workspace = true #   = "0.4"
percent-encoding.workspace = true #   = "2.2"
# reqwest = { version="0.11", features = ["stream"] }
# tokio = { version = "1", features = ["full"] }
[features]
default = []
# left for debug
# default = ["gst"]
# default = ["mpv"]
# default = ["discord"]
# mpris = ["souvlaki"]
# cover = ["tempfile"]
# cover = []
gst = ["gstreamer","glib"]
mpv = ["libmpv-sys"]
# discord = ["discord-rich-presence"]


[dev-dependencies]
pretty_assertions = "1"
# anyhow = "1"
# hound = "3.4"
# ringbuf = "0.3"
# clap = { version = "3.1", default-features = false, features = ["std"] }

[target.'cfg(not(target_os = "linux"))'.dependencies]
cpal = "0.14"

[target.'cfg(target_os = "android")'.dev-dependencies]
ndk-glue = "0.6"

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.37", features = ["Win32_Media_Audio", "Win32_Foundation", "Win32_System_Com", "Win32_Devices_Properties", "Win32_Media_KernelStreaming", "Win32_System_Com_StructuredStorage", "Win32_System_Ole", "Win32_System_Threading", "Win32_Security", "Win32_System_SystemServices", "Win32_System_WindowsProgramming", "Win32_Media_Multimedia", "Win32_UI_Shell_PropertiesSystem"]}
num-traits = { version = "0.2.6", optional = true }
parking_lot = "0.12"
once_cell = "1.12"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd"))'.dependencies]
alsa = "0.6"
nix = "0.23"
libc = "0.2.65"
parking_lot = "0.12"
# jack = { version = "0.9", optional = true }

[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
core-foundation-sys = "0.8.2" # For linking to CoreFoundation.framework and handling device name `CFString`s.
mach = "0.3" # For access to mach_timebase type.

[target.'cfg(target_os = "macos")'.dependencies]
coreaudio-rs = { version = "0.10", default-features = false, features = ["audio_unit", "core_audio"] }

[target.'cfg(target_os = "ios")'.dependencies]
coreaudio-rs = { version = "0.10", default-features = false, features = ["audio_unit", "core_audio", "audio_toolbox"] }

[target.'cfg(target_os = "emscripten")'.dependencies]
stdweb = { version = "0.1.3", default-features = false }

[target.'cfg(all(target_arch = "wasm32", target_os = "unknown"))'.dependencies]
wasm-bindgen = { version = "0.2.58", optional = true }
js-sys = { version = "0.3.35" }
web-sys = { version = "0.3.35", features = [ "AudioContext", "AudioContextOptions", "AudioBuffer", "AudioBufferSourceNode", "AudioNode",  "AudioDestinationNode", "Window", "AudioContextState"] }

[target.'cfg(target_os = "android")'.dependencies]
oboe = { version = "0.4", features = [ "java-interface" ] }
ndk = "0.6"
ndk-context = "0.1"
jni = "0.19"

